plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

// 빌드시 현재 모듈에서 jar 생성하지 않음
bootJar {enabled = false}
jar {enabled = true}

allprojects {
	group = 'com.matching'
	version = '0.0.1'
	sourceCompatibility = '21'
}

// 인코딩 관련
compileJava.options.encoding = 'UTF-8'
javadoc {
	options.charSet = 'UTF-8'
}

// 모든 하위 모듈에 설정 적용
subprojects {
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
		configureEach {
			// logging의 종속성을 제외 (Logback)
			exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// JPA
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		// ModelMapper
		implementation 'org.modelmapper:modelmapper:3.2.0'

		// Log4j2 (Log4j2를 받으며, yml 파일을 사용하기 위한 jackson-dataformat-yaml 라이브러리를 추가)
		implementation 'org.springframework.boot:spring-boot-starter-log4j2'
		implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	test {
		useJUnitPlatform()
	}
}
